[package]
name = "currying"
version = "0.3.5"
edition = "2021"
license = "MIT"
keywords = ["function", "fp", "curry", "currying", "haskell"]
categories = ["rust-patterns", "algorithms", "mathematics", "no-std::no-alloc"]
description = "A crate for currying anything implementing `FnOnce`. Arguments can be passed one at a time, yielding a new something implementing `FnOnce` (and possibly `FnMut` and `Fn`) which can be called with one less argument."
repository = "https://github.com/sigurd4/currying"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "currying"

[lints.rust]
unsafe_code = "forbid"

[badges]
maintainence = {status = "as-is"}

[features]
default = ["rcurry", "16"]
rcurry = []
8 = ["tupleops/8"]
16 = ["tupleops/16", "8"]
32 = ["tupleops/32", "16"]
64 = ["tupleops/64", "32"]
96 = ["tupleops/96", "64"]
128 = ["tupleops/128", "96"]
160 = ["tupleops/160", "128"]
192 = ["tupleops/192", "160"]
224 = ["tupleops/224", "192"]
256 = ["tupleops/256", "224"]
dont_hurt_yourself_by_using_all_features = ["tupleops/dont_hurt_yourself_by_using_all_features"]

[dependencies]
moddef = "0.3.0"
tupleops = {version = "0.1.1", features = ["concat"]}
tupleops-macros = "0.1.0"