name: Rust
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  check:
    name: "Check"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        rust:
        #- stable
        #- beta
        - nightly
        - nightly-2024-12-12
    steps:
    - uses: "actions/checkout@v3"
      name: "Checkout"
    - uses: "actions-rs/toolchain@v1"
      with:
        profile: "minimal"
        toolchain: "${{ matrix.rust }}"
        override: true
        name: "Install Rust ${{ matrix.rust }}"
    - name: cache
      uses: "Swatinem/rust-cache@v2"
    - uses: "actions-rs/cargo@v1"
      with:
        command: "check"
      name: "Run `cargo check`"
    - uses: "actions-rs/cargo@v1"
      with:
        command: "check"
        args: "--examples"
        name: "Check examples"
        if: "matrix.rust != 'nightly-2024-12-12'"
  test:
    name: "Test"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        rust:
        #- stable
        #- beta
        - nightly
    steps:
    - uses: "actions/checkout@v3"
      name: "Checkout"
    - uses: "actions-rs/toolchain@v1"
      with:
        profile: "minimal"
        toolchain: "${{ matrix.rust }}"
        override: true
      name: "Install Rust ${{ matrix.rust }}"
    - uses: "actions-rs/cargo@v1"
      with:
        command: "test"
        name: "Run `cargo test`"
  lints:
    name: "Lints"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
      name: "Checkout"
    - uses: "actions-rs/toolchain@v1"
      with:
        profile: "minimal"
        #toolchain: "stable"
        toolchain: "nightly"
        override: true
        components: "rustfmt, clippy"
      name: "Install Rust stable"
    - uses: "actions-rs/cargo@v1"
      with:
        command: "fmt"
        args: "--all -- --check"
      name: "Run `cargo fmt`"
    - uses: "actions-rs/cargo@v1"
      with:
        command: "clippy"
        args: "-- -D warnings"
      name: "Run `cargo clippy`"
  coverage:
    name: "Code Coverage"
    runs-on: "ubuntu-latest"
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
    - uses: "actions/checkout@v3"
      name: "Checkout"
    - uses: "actions-rs/toolchain@v1"
      with:
        profile: "minimal"
        toolchain: "nightly"
        override: true
      name: "Install Rust nightly"
    - name: "Run cargo-tarpaulin"
      run: |
          cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 120 --out xml
    - name: "Upload to codecov.io"
      uses: "codecov/codecov-action@v2"
      with:
        token: ${{secrets.CODECOV_TOKEN}} # not required for public repos
        fail_ci_if_error: true
    - name: "Archive code coverage results"
      uses: "actions/upload-artifact@v4"
      with:
        name: "code-coverage-report"
        path: "cobertura.xml"
